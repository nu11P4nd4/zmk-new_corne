#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0>;
        };

        kby {
            bindings = <&kp GLOBE>;
            key-positions = <40 41>;
            layers = <0>;
        };

        cmd {
            bindings = <&kp LEFT_GUI>;
            key-positions = <22 23>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R                   &kp T                                      &kp UP_ARROW                     &kp Y        &kp U        &kp I                         &kp O    &kp P     &kp GRAVE
&kp LCTRL       &kp A  &kp S  &kp D         &kp F                   &kp G                      &kp LEFT_ARROW  &mkp LCLK       &kp RIGHT_ARROW  &kp H        &kp J        &kp K                         &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V                   &kp B        &kp K_MUTE                    &kp DOWN_ARROW                   &kp N        &kp M        &kp COMMA                     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LEFT_ALT  &mt LEFT_GUI BACKSPACE  &lt 1 SPACE                                                                 &lt 2 ENTER  &lt 3 SPACE  &mt LC(LS(LA(LEFT_GUI))) ESC
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1             &kp N2           &kp N3      &kp N4      &kp N5                                      &mmv MOVE_UP                     &kp N6        &kp N7        &kp N8        &kp N9        &kp N0           &kp MINUS
&trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp KP_PLUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE    &kp PG_UP
&trans  &trans             &kp LG(X)        &kp LG(C)   &kp LG(V)   &trans            &trans                    &mmv MOVE_DOWN                   &kp KP_MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_MULTIPLY  &kp PG_DN
                                            &trans      &trans      &trans                                                                       &kp INS       &kp EQUAL     &kp N0
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH  &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans        &trans        &trans    &trans     &trans               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none     &mkp RCLK  &mkp MCLK  &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans    &trans     &kp SPACE                                                             &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        layer3 {
            display-name = "Fn";
            bindings = <
&out OUT_TOG  &kp F1          &kp F2        &kp F3        &kp F4        &kp F5                                             &mmv MOVE_UP                     &kp F6     &kp F7    &kp F8       &kp F9      &kp F10               &kp F11
&out OUT_USB  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                       &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN  &kp UP       &kp RIGHT   &kp LG(LS(NUMBER_4))  &kp F12
&bt BT_CLR    &bt BT_CLR_ALL  &trans        &sys_reset    &bootloader   &studio_unlock  &rgb_ug RGB_TOG                    &mmv MOVE_DOWN                   &soft_off  &trans    &bootloader  &sys_reset  &kp LG(NUMBER_1)      &kp PAUSE_BREAK
                                            &trans        &trans        &trans                                                                              &trans     &trans    &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
